GenWare: AN INTELLIGENT SYSTEM FOR GENERIC MALWARE DETECTION

Abstract: Existing malware detection systems are incapable of zero-day malware detection and the dynamic nature of obfuscated codes has made malware analysis defective. This paper therefore presents an intelligent Malware Detection System (iMDS) to address these challenges. The experiment conducted leveraged an image-based malware dataset (Malimg) and a raw custom malware dataset (VsWare). iMDS was developed with three main components viz: Malware AutoEncoder (MAE) used for malware feature extraction, Malware Generator (MALGEN) used to generate new malware samples with unique features and a ResNet-based intelligent Generic Malware Detector (iGMD), was used for the robust detection of known and unknown malware. The best detection accuracy score of iGMD is 99 67%. iMDS exhibited better performance when compared with transferred Deep Convolutional Generative Adversarial Network (tDCGAN) and a Semantic-Preserving Syntactic Code Transformation (SPECTRA) Model. The study shows that the proposed technique is robust to zero- day malware attack.

Keywords: Malware visualization, Malware strains, New data-points, Malware generator.


1	Introduction

1.1	Background

The Internet is fast becoming an indispensable quantity of daily living [13]. As much as it has facilitated civilization to an unimaginable extent, it also has been successfully integrated into human personality as a matter of lifestyle and profession. Currently, most organizations and government agencies are moving their operations and activities to online platforms for extended reach, enhanced service delivery, increased profitability and also in order to conform with COVID-19 protocols. This migration is facilitating the absolute dependency of enterprises upon IT infrastructures. The necessary reliance of individuals upon the internet is also making computing resources as well as critical assets to be attractive to attackers in the cyberspace. Such challenges include the use of sophisticated codes by cybercriminals to penetrate into digital devices [12].
The challenges assailing the cyberspace communities today are most certainly alarming [10]. Without casting aspersion on the good of technological advancement over the years and its tremendous benefit to humanity; the accruing distresses nonetheless, have really been severe. The computing world, as an all- inclusive domain, which is perpetually haunted by hackers and cybercriminals. The prevalence of cyberattacks over the years have resulted to considerable loss of funds and compromise of entire infrastructures [8]. Cybercriminals attempt areas with the greatest likelihood of gaining access to critical systems, applications and data [37]. With the present digital onslaught, the application attack surface is overgrown with various assortments of maliciousness.
Record holds that over 100 billion new lines of malicious software codes are written on an annual basis [25]. Although the original motives for carrying out cyberattacks largely remain unchanged, cybercriminals have become increasingly sophisticated with their techniques [41]. Perhaps due to recent developments and evolution of the IT landscape, the line between security professionals and cybercriminals has been made very thin. And as such, it may be easy for an individual to wear both hats surreptitiously and unconscientiously. The ubiquitous use of malicious contents is a pervasive phenomenon and its mitigation remains problematic even as its accessibility leaves power in the hands of deviants.
As described in Fig. 1, computer systems are increasingly faced with illegal internal and external penetrations [36]; which remain adversarial to users [8]. Internal penetrations may include proximity attacks such as shoulder-surfing attack, insider threat and the likes. However, malware attack is an exceptional case of external penetration which poses very serious threat to individuals and corporate organizations.
Availing every means possible, attackers attempt to exploits vulnerabilities found within the computer systems connected to the Internet [35]. Malware and its pernicious variants remain the choice weapon used by cybercriminals to level attacks against Internet-based computer systems within the digital domain. [14] reported that the exploitation of machines and networks are largely done through the instrumentation of malicious software broadly regarded as malware. By sampling from existing malware, black-hat hackers select suitable malware variants unique to their target [40]. A notable instance is Stuxnet, which was released in 2010. Regarded as the most menacing malware in history, Stuxnet was designed to attack Iran’s nuclear program [3,42]. Stuxnet is a computer worm that took advantage of multiple zero-day vulnerabilities in Windows operating system to gain access to system and was able to self-propagate within the network of computers.
Tremendous effort is being made by malware researchers and analyst to ensure that computer systems are set on guard against malicious attacks by the development of security solutions, which serve as countermeasures against malware rampages. However, beyond usual conventions, which require the development of an antimalware engine with program codes and a regular definition update and software upgrade, malware research now recently gears toward the adoption of Artificial Intelligence (AI) techniques to develop robust detection systems [19]. This has greatly improved upon previous methodologies and has facilitated resilience to accruing setbacks and limitation to malware analysis such as; malware encryption, code-morphing and obfuscation, dormant functionality, etc. Predominant among these techniques is Machine Learning, (ML) which in contrast to conventional code work to develop malware detection software, a model is trained to predict certain possibilities within the context of a given training dataset, to give accurate prediction and suitable classification outputs.
This research therefore explores several techniques of Deep Learning (DL), a subdomain of ML, with predictive capabilities that can be useful for envisaging/anticipating future outbreaks of unknown (zero- day) malware attack. The methods in this work premises on the intuitive attributes of adopted DL techniques to yield excellent performance in terms of suitable classification.
Although software vendors endeavour to create flawless software, this is however an aspirational concept. Devices, networks and workstations may inherently consist a number of bugs through which they can be exploited [2]. The vulnerabilities present within computer systems aids and abets cybercriminals on the successful implementation of malicious advances, i.e., zero-day exploits, which will always bear financial and emotional consequences of sorts.
Traditional techniques for malware analysis have been successful and they remain the foundation upon which new-age detection models are built. Static analysis for example plays a huge role in signature-based detection. It is genuine and easy to implement.
 
Static approach to malware analysis readily identifies with previously discovered patterns of malware signatures, in order to preserve computer systems yet to be compromised. However, this classic method falters where encryption, code-obfuscation, polymorphic, metamorphic or oligomorphic malware come to play [34]. These malware types and the recently pervasive variants, which may consist of technical complexities, pose critical challenges to the traditional techniques employed for malware analysis.
This work therefore addresses two major challenges of malware detection in deep learning context. The concept is about the discovery of undisclosed malware features within the distribution of a given malware dataset. By adopting a Deep Learning model, new strains of malware can be spotted, in order to anticipate future malicious advances of cybercriminals. On the other hand, this research direction also subliminally gives a new lease on life for malware analysis in Deep Learning. By being able to have as much desired malicious samples from the existing latent space of malware features, the challenge of overfitting, common with Deep Learning models, may come to an abrupt end.


2	Literature Review
2.1	Malware

Malware research depicts a broad range of activities and the engagement of tools and techniques such as; reverse engineering, exploit-kit, exploit analysis, botnet analysis, emulation, sandbox and much more [28]. Malware is a word that generically refers to all types of malicious software consisting irritable or injurious characteristics resident on a system. Any software that does something that causes harm to a user, computer, or network can be considered as malware, and its variants include viruses, Trojan horses, worms, rootkits, adware, spyware, backdoors, botnets, keyloggers and many more [30]. The behaviour of these malware variants ranges from being merely annoying to vastly destructive [10].
Malware can however be detected by subjecting these suspicious files to analysis. By this, security experts are able to dissect the malware to understand how it works, how to identify it, and how to defeat or eliminate it [33]. However, in order to successfully analyze malware and its variants, researchers leverage existing malware dataset as an attempt to validate newly developed anti-malware models in contrast to existing ones.
2.2	Malware Analysis
Malware analysis is venerably & effectively done by security professionals and experts within the cybersecurity domain. Particularly traditional techniques, which involve the examination of malicious files (within or outside runtime), requires domain knowledge to a great degree. Cybersecurity experts, particularly malware analysts, are then able to identify specific code patterns, sort them out and determine the file nature based on relevant domain knowledge and expertise. This conventional method to malware analysis enables security professionals to handcraft unique signatures particular to the malware and the subsequent variant, which is henceforth regarded as the malware’s fingerprint. However, with the advent of artificial intelligence (AI), students as well as enthusiasts now use machine learning (ML) and Deep Learning (DL) methods to develop benchmark detection models for malware [24,32].
Malware Representation. Traditionally, malware codes are analyzed with respect to their raw formats presented in codes. However, recent works on malware research now make use of images for malware analysis. This technique was pioneered by [26] which is commonly regarded as malware visualization. It involves the conversion of a malware binary into grayscale image. However, a malware file may now be represented either with textual or textural features.
Textual Features (Binary & Opcodes Sequences). Malware presented with textual features is effectively analyzed by security professionals and experts within the security domain. The process involves the examination of the hash values (equivalent to binary streams of a suspicious file consisting zeros and ones), in order to identify relevant patterns that correspond with previous malware codes [6,38]. Through this type of analysis, experts are able to handcraft a signature unique to the particular definition, which is commonly regarded as malware fingerprint.
Textural Features (Malware Visualization). Malware has largely been dealt with through the representation of unique byte sequence extracted from the binary samples. Once a file is considered suspicious, experts subject such file to necessary analysis. This analysis involves the inspection of the binary codes that make up the file. However, malware authors can easily generate obfuscated and metamorphic malware to evade the detection of anti-virus software using automated toolkits [17,22]. A novel alternative to textual analysis is the adoption of byteplot technique for the visualization of malicious codes. Malware may now be represented in its digital image equivalence, consisting textural features.
Malware Visualization. Malware visualization is a major breakthrough in malware research. The technique was pioneered by Nataraj et al [26] as a seminar work; and has since then on, been widely adopted. It involves the mapping of raw codes into definite pixels that make up an image. Visualizing malware readily presents security analyst with valuable information as existing malicious features are presented in images (grayscale or RGB) with textural features. Visualized malware depicts a structural representation of family specific variant. This therefore makes it quite easy to identify a malware and also categorize it into its appropriate family. A given malware binary is read as a vector of 8-bit unsigned integers and then organized into a 2D array. This can be visualized as a gray scale image in the range [0,255] (0: black, 255: white). The width of the image is fixed and the height is allowed to vary depending on the file size [23]. An example of a visualized malware is shown in Fig. 2.

2.3	Challenges of Malware Detection

The process of determining a suitable malware signature is usually done by human experts. Based on the proficiency, experience and domain knowledge required for malware analysis, only security professionals are able to effectively handle malware. Malware analysis is therefore accomplished by the handcrafting of a signature unique to the malware. However, the challenges commonly encountered in the design and implementation of malware detection systems may include high rate of false positives and false negatives, scalability disputes, code obfuscation, encryption and metamorphic engines, detection speed and accuracy. Nonetheless, the traditional process of malware analysis, which involves the thorough examination of certain attributes of malware, readily gives away the credibility of the procedure, as it is resource consuming. Also, relying on this method however, has proven inefficient and largely ineffective, as the process implies the compromise of several computer systems due to the lack of a prompt security solution. Again, this classic method falters in the identification of malicious software with unknown features. These limitations hereby bring to fore the imperative necessity to pre-empt malware and also automate malware detection techniques.
 
2.4	Deep Learning in Malware Detection

Deep learning (DL) is a new frontier in data mining and machine learning, which is being leveraged by industrial and academic researchers for different applications [11,39]. Deep learning allows computational models, consisting multiple processing layers, to learn representations of data with multiple levels of abstraction [21]. The strength of deep learning architectures among other benefits, is the capability to derive valuable information from voluminous data and also to automatically fine-tune DL models, so as to derive meaning from the obtained new data without the need for an expert with domain knowledge [2,31].

Generative Adversarial Network. Generative Adversarial Network (GAN) is a generative model in machine learning subfield of Artificial Intelligence. The technique was introduced by Ian Goodfellow in 2014 and has since then on been broadly adopted in several research domains. GAN frameworks consist of dueling neural networks, i.e., the conflict between two adversaries – the generator 𝐺 and the discriminator
𝐷 [9].

Generator. The generator network converts random noise into observations that appears to have been sampled from the original dataset and the discriminator predicts whether an observation comes from the original dataset or is one of the generator’s forgeries.
Discriminator. The discriminator network takes an example from the domain as input (real or generated) and predicts a binary class label of real or fake (generated). The real example comes from the training dataset, while the fake samples are from the generator.
GANs have already been applied to high-impact business applications. These include: drug discovery, style-transfer, text-to-image translations etc. There are also literally hundreds of use cases in early stages of experimentation [18].


3	Proposed Methodology

3.1	System Architecture
This study presents an intelligent Malware Detection System (iMDS) provisioned with the capability of detecting zero-day malware. The architecture comprises four (4) transitional phases done with the designated components: Malware Transformation, Malware Autoencoder (MAE), Malware Generator (MALGEN) and intelligent Generic Malware Detector (iGMD). The architecture of the proposed model is given in Fig. 3.

 


5.	Conclusion

5.1	Summary

In this paper, we raised the issue about unknown malware detection. As unknown malware is created with modifications, we use GAN to generate new malware samples within the confines of existing malware data distribution. Owning to the possibility of being able to generate new data points from existing dataset, we leveraged MalImg, and a custom malware (VsWare) dataset to map out new malware samples from their classes, yielding improved malware datasets (i-Malimg and VsWare). The inclusion of these generated malware with the real dataset resulted into a dynamic dataset suitable for modeling both known and unknown malware, upon which the detection models were trained.
Also realizing Deep Learning approach to malware research as requiring enormous amount of data– which is often unobtainable for malware analysts, the method presented in this study therefore doubles as an efficient data-augmentation approach to robust malware detection. Existing detection systems will mostly overfit on malware data– which is an advantage to malware authors, and this is due to insufficient data. The method herewith proposed addresses the challenge of insufficient data for malware research in Deep Learning.
Several efforts have been made by researchers towards the development of robust malware detection techniques. Much more, work is currently well underway to put an end to the never-ending pursuits of cybercriminals who leverage latest technologies to perpetrate their sinister schemes that are adversarial to individuals and organizations. The malware detection space in cybersecurity consists of several paradigms of actively defending against malware rampage. However, amidst the several conglomerates of malware mitigation techniques lies malware data. This work therefore justifies data pragmatism as a necessary means to achieving a proactive mechanism for the detection of both known and unknown malware. This summarizes the method adopted in this work and the adoption thereof promises the robust detection of both known and unknown malware.
 
5.2	Future Work

Although there are several ongoing research efforts to malware detection and classification, malware however remains a serious threat in the cyberworld. Malware detection is bypassed using evasion techniques such as encryption and code obfuscations, making detection methods ineffective. However, malware visualization rends this fabric of secrecy in malicious codes. The paradigm adopted in this study hereby makes feasible the capability of envisaging/anticipating future outbreaks of zero-day malware attack, and this holds a promising result, as robust malware detection models can be built on such method.
Further experiment is needed to have a more comprehensive view of the potentials and limitations of the proposed technique. The areas to look into are as follows:
i	Standardizing the threshold values of the generated images.
ii	Leveraging transfer learning techniques for both class-specific and dataset-specific image-based malware generation.
Also, further work will be done in the direction of generating malware samples from other standard malware dataset.
There are well over 20 different types of malware and their functionalities may range from being merely annoying to vastly destructive. Future study will be geared towards building a robust malware dataset that consists of the available types of malware definition and scaling their variants by the method presented in this study.
